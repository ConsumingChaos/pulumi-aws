// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Amazon Managed Prometheus workspace data source.
 *
 * ## Example Usage
 * ### Basic configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.AmpWorkspace({
 *     workspaceId: "ws-41det8a1-2c67-6a1a-9381-9b83d3d78ef7",
 * }));
 * ```
 */
export function getWorkspace(args: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:amp/getWorkspace:getWorkspace", {
        "tags": args.tags,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceArgs {
    /**
     * The tags assigned to the resource.
     */
    tags?: {[key: string]: string};
    /**
     * The Prometheus workspace ID.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getWorkspace.
 */
export interface GetWorkspaceResult {
    /**
     * The Prometheus workspace alias.
     */
    readonly alias: string;
    /**
     * The Amazon Resource Name (ARN) of the Prometheus workspace.
     */
    readonly arn: string;
    /**
     * The creation date of the Prometheus workspace.
     */
    readonly createdDate: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The endpoint of the Prometheus workspace.
     */
    readonly prometheusEndpoint: string;
    /**
     * The status of the Prometheus workspace.
     */
    readonly status: string;
    /**
     * The tags assigned to the resource.
     */
    readonly tags: {[key: string]: string};
    readonly workspaceId: string;
}

export function getWorkspaceOutput(args: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply(a => getWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceOutputArgs {
    /**
     * The tags assigned to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Prometheus workspace ID.
     */
    workspaceId: pulumi.Input<string>;
}
