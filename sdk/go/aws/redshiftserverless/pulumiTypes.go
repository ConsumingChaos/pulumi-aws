// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkgroupConfigParameter struct {
	// The key of the parameter. The options are `datestyle`, `enableUserActivityLogging`, `queryGroup`, `searchPath`, and `maxQueryExecutionTime`.
	ParameterKey string `pulumi:"parameterKey"`
	// The value of the parameter to set.
	ParameterValue string `pulumi:"parameterValue"`
}

// WorkgroupConfigParameterInput is an input type that accepts WorkgroupConfigParameterArgs and WorkgroupConfigParameterOutput values.
// You can construct a concrete instance of `WorkgroupConfigParameterInput` via:
//
//	WorkgroupConfigParameterArgs{...}
type WorkgroupConfigParameterInput interface {
	pulumi.Input

	ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput
	ToWorkgroupConfigParameterOutputWithContext(context.Context) WorkgroupConfigParameterOutput
}

type WorkgroupConfigParameterArgs struct {
	// The key of the parameter. The options are `datestyle`, `enableUserActivityLogging`, `queryGroup`, `searchPath`, and `maxQueryExecutionTime`.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The value of the parameter to set.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (WorkgroupConfigParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigParameter)(nil)).Elem()
}

func (i WorkgroupConfigParameterArgs) ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput {
	return i.ToWorkgroupConfigParameterOutputWithContext(context.Background())
}

func (i WorkgroupConfigParameterArgs) ToWorkgroupConfigParameterOutputWithContext(ctx context.Context) WorkgroupConfigParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigParameterOutput)
}

// WorkgroupConfigParameterArrayInput is an input type that accepts WorkgroupConfigParameterArray and WorkgroupConfigParameterArrayOutput values.
// You can construct a concrete instance of `WorkgroupConfigParameterArrayInput` via:
//
//	WorkgroupConfigParameterArray{ WorkgroupConfigParameterArgs{...} }
type WorkgroupConfigParameterArrayInput interface {
	pulumi.Input

	ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput
	ToWorkgroupConfigParameterArrayOutputWithContext(context.Context) WorkgroupConfigParameterArrayOutput
}

type WorkgroupConfigParameterArray []WorkgroupConfigParameterInput

func (WorkgroupConfigParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupConfigParameter)(nil)).Elem()
}

func (i WorkgroupConfigParameterArray) ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput {
	return i.ToWorkgroupConfigParameterArrayOutputWithContext(context.Background())
}

func (i WorkgroupConfigParameterArray) ToWorkgroupConfigParameterArrayOutputWithContext(ctx context.Context) WorkgroupConfigParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigParameterArrayOutput)
}

type WorkgroupConfigParameterOutput struct{ *pulumi.OutputState }

func (WorkgroupConfigParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigParameter)(nil)).Elem()
}

func (o WorkgroupConfigParameterOutput) ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput {
	return o
}

func (o WorkgroupConfigParameterOutput) ToWorkgroupConfigParameterOutputWithContext(ctx context.Context) WorkgroupConfigParameterOutput {
	return o
}

// The key of the parameter. The options are `datestyle`, `enableUserActivityLogging`, `queryGroup`, `searchPath`, and `maxQueryExecutionTime`.
func (o WorkgroupConfigParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkgroupConfigParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The value of the parameter to set.
func (o WorkgroupConfigParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v WorkgroupConfigParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type WorkgroupConfigParameterArrayOutput struct{ *pulumi.OutputState }

func (WorkgroupConfigParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupConfigParameter)(nil)).Elem()
}

func (o WorkgroupConfigParameterArrayOutput) ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput {
	return o
}

func (o WorkgroupConfigParameterArrayOutput) ToWorkgroupConfigParameterArrayOutputWithContext(ctx context.Context) WorkgroupConfigParameterArrayOutput {
	return o
}

func (o WorkgroupConfigParameterArrayOutput) Index(i pulumi.IntInput) WorkgroupConfigParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkgroupConfigParameter {
		return vs[0].([]WorkgroupConfigParameter)[vs[1].(int)]
	}).(WorkgroupConfigParameterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupConfigParameterInput)(nil)).Elem(), WorkgroupConfigParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupConfigParameterArrayInput)(nil)).Elem(), WorkgroupConfigParameterArray{})
	pulumi.RegisterOutputType(WorkgroupConfigParameterOutput{})
	pulumi.RegisterOutputType(WorkgroupConfigParameterArrayOutput{})
}
