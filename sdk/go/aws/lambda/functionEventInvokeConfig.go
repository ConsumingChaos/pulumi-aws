// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an asynchronous invocation configuration for a Lambda Function or Alias. More information about asynchronous invocations and the configurable values can be found in the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/lambda_function_event_invoke_config.html.markdown.
type FunctionEventInvokeConfig struct {
	s *pulumi.ResourceState
}

// NewFunctionEventInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, args *FunctionEventInvokeConfigArgs, opts ...pulumi.ResourceOpt) (*FunctionEventInvokeConfig, error) {
	if args == nil || args.FunctionName == nil {
		return nil, errors.New("missing required argument 'FunctionName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["destinationConfig"] = nil
		inputs["functionName"] = nil
		inputs["maximumEventAgeInSeconds"] = nil
		inputs["maximumRetryAttempts"] = nil
		inputs["qualifier"] = nil
	} else {
		inputs["destinationConfig"] = args.DestinationConfig
		inputs["functionName"] = args.FunctionName
		inputs["maximumEventAgeInSeconds"] = args.MaximumEventAgeInSeconds
		inputs["maximumRetryAttempts"] = args.MaximumRetryAttempts
		inputs["qualifier"] = args.Qualifier
	}
	s, err := ctx.RegisterResource("aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FunctionEventInvokeConfig{s: s}, nil
}

// GetFunctionEventInvokeConfig gets an existing FunctionEventInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FunctionEventInvokeConfigState, opts ...pulumi.ResourceOpt) (*FunctionEventInvokeConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["destinationConfig"] = state.DestinationConfig
		inputs["functionName"] = state.FunctionName
		inputs["maximumEventAgeInSeconds"] = state.MaximumEventAgeInSeconds
		inputs["maximumRetryAttempts"] = state.MaximumRetryAttempts
		inputs["qualifier"] = state.Qualifier
	}
	s, err := ctx.ReadResource("aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FunctionEventInvokeConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FunctionEventInvokeConfig) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FunctionEventInvokeConfig) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Configuration block with destination configuration. See below for details.
func (r *FunctionEventInvokeConfig) DestinationConfig() pulumi.Output {
	return r.s.State["destinationConfig"]
}

// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
func (r *FunctionEventInvokeConfig) FunctionName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["functionName"])
}

// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
func (r *FunctionEventInvokeConfig) MaximumEventAgeInSeconds() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["maximumEventAgeInSeconds"])
}

// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
func (r *FunctionEventInvokeConfig) MaximumRetryAttempts() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["maximumRetryAttempts"])
}

// Lambda Function published version, `$LATEST`, or Lambda Alias name.
func (r *FunctionEventInvokeConfig) Qualifier() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["qualifier"])
}

// Input properties used for looking up and filtering FunctionEventInvokeConfig resources.
type FunctionEventInvokeConfigState struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig interface{}
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionName interface{}
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds interface{}
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts interface{}
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier interface{}
}

// The set of arguments for constructing a FunctionEventInvokeConfig resource.
type FunctionEventInvokeConfigArgs struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig interface{}
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionName interface{}
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds interface{}
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts interface{}
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier interface{}
}
