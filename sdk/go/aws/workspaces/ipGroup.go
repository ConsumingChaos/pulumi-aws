// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an IP access control group in AWS Workspaces Service
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/workspaces_ip_group.html.markdown.
type IpGroup struct {
	s *pulumi.ResourceState
}

// NewIpGroup registers a new resource with the given unique name, arguments, and options.
func NewIpGroup(ctx *pulumi.Context,
	name string, args *IpGroupArgs, opts ...pulumi.ResourceOpt) (*IpGroup, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["rules"] = nil
		inputs["tags"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["rules"] = args.Rules
		inputs["tags"] = args.Tags
	}
	s, err := ctx.RegisterResource("aws:workspaces/ipGroup:IpGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IpGroup{s: s}, nil
}

// GetIpGroup gets an existing IpGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IpGroupState, opts ...pulumi.ResourceOpt) (*IpGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["rules"] = state.Rules
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:workspaces/ipGroup:IpGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IpGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IpGroup) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IpGroup) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The description.
func (r *IpGroup) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The name of the IP group.
func (r *IpGroup) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// One or more pairs specifying the IP group rule (in CIDR format) from which web requests originate.
func (r *IpGroup) Rules() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["rules"])
}

func (r *IpGroup) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering IpGroup resources.
type IpGroupState struct {
	// The description.
	Description interface{}
	// The name of the IP group.
	Name interface{}
	// One or more pairs specifying the IP group rule (in CIDR format) from which web requests originate.
	Rules interface{}
	Tags interface{}
}

// The set of arguments for constructing a IpGroup resource.
type IpGroupArgs struct {
	// The description.
	Description interface{}
	// The name of the IP group.
	Name interface{}
	// One or more pairs specifying the IP group rule (in CIDR format) from which web requests originate.
	Rules interface{}
	Tags interface{}
}
