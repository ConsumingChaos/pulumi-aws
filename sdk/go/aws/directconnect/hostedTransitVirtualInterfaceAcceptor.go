// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dx_hosted_transit_virtual_interface_accepter.html.markdown.
type HostedTransitVirtualInterfaceAcceptor struct {
	s *pulumi.ResourceState
}

// NewHostedTransitVirtualInterfaceAcceptor registers a new resource with the given unique name, arguments, and options.
func NewHostedTransitVirtualInterfaceAcceptor(ctx *pulumi.Context,
	name string, args *HostedTransitVirtualInterfaceAcceptorArgs, opts ...pulumi.ResourceOpt) (*HostedTransitVirtualInterfaceAcceptor, error) {
	if args == nil || args.DxGatewayId == nil {
		return nil, errors.New("missing required argument 'DxGatewayId'")
	}
	if args == nil || args.VirtualInterfaceId == nil {
		return nil, errors.New("missing required argument 'VirtualInterfaceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["dxGatewayId"] = nil
		inputs["tags"] = nil
		inputs["virtualInterfaceId"] = nil
	} else {
		inputs["dxGatewayId"] = args.DxGatewayId
		inputs["tags"] = args.Tags
		inputs["virtualInterfaceId"] = args.VirtualInterfaceId
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:directconnect/hostedTransitVirtualInterfaceAcceptor:HostedTransitVirtualInterfaceAcceptor", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HostedTransitVirtualInterfaceAcceptor{s: s}, nil
}

// GetHostedTransitVirtualInterfaceAcceptor gets an existing HostedTransitVirtualInterfaceAcceptor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostedTransitVirtualInterfaceAcceptor(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HostedTransitVirtualInterfaceAcceptorState, opts ...pulumi.ResourceOpt) (*HostedTransitVirtualInterfaceAcceptor, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["dxGatewayId"] = state.DxGatewayId
		inputs["tags"] = state.Tags
		inputs["virtualInterfaceId"] = state.VirtualInterfaceId
	}
	s, err := ctx.ReadResource("aws:directconnect/hostedTransitVirtualInterfaceAcceptor:HostedTransitVirtualInterfaceAcceptor", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HostedTransitVirtualInterfaceAcceptor{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *HostedTransitVirtualInterfaceAcceptor) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *HostedTransitVirtualInterfaceAcceptor) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The ARN of the virtual interface.
func (r *HostedTransitVirtualInterfaceAcceptor) Arn() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["arn"])
}

// The ID of the Direct Connect gateway to which to connect the virtual interface.
func (r *HostedTransitVirtualInterfaceAcceptor) DxGatewayId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["dxGatewayId"])
}

// A mapping of tags to assign to the resource.
func (r *HostedTransitVirtualInterfaceAcceptor) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The ID of the Direct Connect virtual interface to accept.
func (r *HostedTransitVirtualInterfaceAcceptor) VirtualInterfaceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["virtualInterfaceId"])
}

// Input properties used for looking up and filtering HostedTransitVirtualInterfaceAcceptor resources.
type HostedTransitVirtualInterfaceAcceptorState struct {
	// The ARN of the virtual interface.
	Arn interface{}
	// The ID of the Direct Connect gateway to which to connect the virtual interface.
	DxGatewayId interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The ID of the Direct Connect virtual interface to accept.
	VirtualInterfaceId interface{}
}

// The set of arguments for constructing a HostedTransitVirtualInterfaceAcceptor resource.
type HostedTransitVirtualInterfaceAcceptorArgs struct {
	// The ID of the Direct Connect gateway to which to connect the virtual interface.
	DxGatewayId interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The ID of the Direct Connect virtual interface to accept.
	VirtualInterfaceId interface{}
}
