// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datapipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific DataPipeline Pipeline.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/datapipeline"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := datapipeline.GetPipeline(ctx, &datapipeline.GetPipelineArgs{
// 			PipelineId: "pipelineID",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPipeline(ctx *pulumi.Context, args *GetPipelineArgs, opts ...pulumi.InvokeOption) (*GetPipelineResult, error) {
	var rv GetPipelineResult
	err := ctx.Invoke("aws:datapipeline/getPipeline:getPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipeline.
type GetPipelineArgs struct {
	// ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
	// A map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getPipeline.
type GetPipelineResult struct {
	// Description of Pipeline.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of Pipeline.
	Name       string `pulumi:"name"`
	PipelineId string `pulumi:"pipelineId"`
	// A map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

func GetPipelineOutput(ctx *pulumi.Context, args GetPipelineOutputArgs, opts ...pulumi.InvokeOption) GetPipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPipelineResult, error) {
			args := v.(GetPipelineArgs)
			r, err := GetPipeline(ctx, &args, opts...)
			return *r, err
		}).(GetPipelineResultOutput)
}

// A collection of arguments for invoking getPipeline.
type GetPipelineOutputArgs struct {
	// ID of the pipeline.
	PipelineId pulumi.StringInput `pulumi:"pipelineId"`
	// A map of tags assigned to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getPipeline.
type GetPipelineResultOutput struct{ *pulumi.OutputState }

func (GetPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineResult)(nil)).Elem()
}

func (o GetPipelineResultOutput) ToGetPipelineResultOutput() GetPipelineResultOutput {
	return o
}

func (o GetPipelineResultOutput) ToGetPipelineResultOutputWithContext(ctx context.Context) GetPipelineResultOutput {
	return o
}

// Description of Pipeline.
func (o GetPipelineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of Pipeline.
func (o GetPipelineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPipelineResultOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineResult) string { return v.PipelineId }).(pulumi.StringOutput)
}

// A map of tags assigned to the resource.
func (o GetPipelineResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPipelineResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPipelineResultOutput{})
}
