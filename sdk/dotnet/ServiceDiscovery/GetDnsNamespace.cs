// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceDiscovery
{
    public static class GetDnsNamespace
    {
        /// <summary>
        /// Retrieves information about a Service Discovery private or public DNS namespace.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.ServiceDiscovery.GetDnsNamespace.InvokeAsync(new Aws.ServiceDiscovery.GetDnsNamespaceArgs
        ///         {
        ///             Name = "example.service.local",
        ///             Type = "DNS_PRIVATE",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDnsNamespaceResult> InvokeAsync(GetDnsNamespaceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDnsNamespaceResult>("aws:servicediscovery/getDnsNamespace:getDnsNamespace", args ?? new GetDnsNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a Service Discovery private or public DNS namespace.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.ServiceDiscovery.GetDnsNamespace.InvokeAsync(new Aws.ServiceDiscovery.GetDnsNamespaceArgs
        ///         {
        ///             Name = "example.service.local",
        ///             Type = "DNS_PRIVATE",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDnsNamespaceResult> Invoke(GetDnsNamespaceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDnsNamespaceResult>("aws:servicediscovery/getDnsNamespace:getDnsNamespace", args ?? new GetDnsNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsNamespaceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A map of tags for the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetDnsNamespaceArgs()
        {
        }
    }

    public sealed class GetDnsNamespaceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetDnsNamespaceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDnsNamespaceResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the namespace.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// A description of the namespace.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
        /// </summary>
        public readonly string HostedZone;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// A map of tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetDnsNamespaceResult(
            string arn,

            string description,

            string hostedZone,

            string id,

            string name,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Arn = arn;
            Description = description;
            HostedZone = hostedZone;
            Id = id;
            Name = name;
            Tags = tags;
            Type = type;
        }
    }
}
