// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate;
import com.pulumi.aws.imagebuilder.outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDistributionConfigurationDistributionFastLaunchConfiguration {
    /**
     * @return The account ID that this configuration applies to.
     * 
     */
    private final String accountId;
    /**
     * @return A Boolean that represents the current state of faster launching for the Windows AMI.
     * 
     */
    private final Boolean enabled;
    /**
     * @return Nested list of launch templates that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
     * 
     */
    private final List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates;
    /**
     * @return The maximum number of parallel instances that are launched for creating resources.
     * 
     */
    private final Integer maxParallelLaunches;
    /**
     * @return Nested list of configurations for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
     * 
     */
    private final List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations;

    @CustomType.Constructor
    private GetDistributionConfigurationDistributionFastLaunchConfiguration(
        @CustomType.Parameter("accountId") String accountId,
        @CustomType.Parameter("enabled") Boolean enabled,
        @CustomType.Parameter("launchTemplates") List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates,
        @CustomType.Parameter("maxParallelLaunches") Integer maxParallelLaunches,
        @CustomType.Parameter("snapshotConfigurations") List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations) {
        this.accountId = accountId;
        this.enabled = enabled;
        this.launchTemplates = launchTemplates;
        this.maxParallelLaunches = maxParallelLaunches;
        this.snapshotConfigurations = snapshotConfigurations;
    }

    /**
     * @return The account ID that this configuration applies to.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return A Boolean that represents the current state of faster launching for the Windows AMI.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Nested list of launch templates that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
     * 
     */
    public List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates() {
        return this.launchTemplates;
    }
    /**
     * @return The maximum number of parallel instances that are launched for creating resources.
     * 
     */
    public Integer maxParallelLaunches() {
        return this.maxParallelLaunches;
    }
    /**
     * @return Nested list of configurations for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
     * 
     */
    public List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations() {
        return this.snapshotConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDistributionConfigurationDistributionFastLaunchConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountId;
        private Boolean enabled;
        private List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates;
        private Integer maxParallelLaunches;
        private List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDistributionConfigurationDistributionFastLaunchConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.enabled = defaults.enabled;
    	      this.launchTemplates = defaults.launchTemplates;
    	      this.maxParallelLaunches = defaults.maxParallelLaunches;
    	      this.snapshotConfigurations = defaults.snapshotConfigurations;
        }

        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        public Builder launchTemplates(List<GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate> launchTemplates) {
            this.launchTemplates = Objects.requireNonNull(launchTemplates);
            return this;
        }
        public Builder launchTemplates(GetDistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate... launchTemplates) {
            return launchTemplates(List.of(launchTemplates));
        }
        public Builder maxParallelLaunches(Integer maxParallelLaunches) {
            this.maxParallelLaunches = Objects.requireNonNull(maxParallelLaunches);
            return this;
        }
        public Builder snapshotConfigurations(List<GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration> snapshotConfigurations) {
            this.snapshotConfigurations = Objects.requireNonNull(snapshotConfigurations);
            return this;
        }
        public Builder snapshotConfigurations(GetDistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration... snapshotConfigurations) {
            return snapshotConfigurations(List.of(snapshotConfigurations));
        }        public GetDistributionConfigurationDistributionFastLaunchConfiguration build() {
            return new GetDistributionConfigurationDistributionFastLaunchConfiguration(accountId, enabled, launchTemplates, maxParallelLaunches, snapshotConfigurations);
        }
    }
}
