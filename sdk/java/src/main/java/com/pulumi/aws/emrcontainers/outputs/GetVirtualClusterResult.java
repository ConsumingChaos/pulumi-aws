// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrcontainers.outputs;

import com.pulumi.aws.emrcontainers.outputs.GetVirtualClusterContainerProvider;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualClusterResult {
    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    private final String arn;
    /**
     * @return Nested attribute containing information about the underlying container provider (EKS cluster) for your EMR Containers cluster.
     * 
     */
    private final List<GetVirtualClusterContainerProvider> containerProviders;
    /**
     * @return The Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    private final String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the cluster.
     * 
     */
    private final String name;
    /**
     * @return The status of the EKS cluster. One of `RUNNING`, `TERMINATING`, `TERMINATED`, `ARRESTED`.
     * 
     */
    private final String state;
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    private final Map<String,String> tags;
    private final String virtualClusterId;

    @CustomType.Constructor
    private GetVirtualClusterResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("containerProviders") List<GetVirtualClusterContainerProvider> containerProviders,
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("virtualClusterId") String virtualClusterId) {
        this.arn = arn;
        this.containerProviders = containerProviders;
        this.createdAt = createdAt;
        this.id = id;
        this.name = name;
        this.state = state;
        this.tags = tags;
        this.virtualClusterId = virtualClusterId;
    }

    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Nested attribute containing information about the underlying container provider (EKS cluster) for your EMR Containers cluster.
     * 
     */
    public List<GetVirtualClusterContainerProvider> containerProviders() {
        return this.containerProviders;
    }
    /**
     * @return The Unix epoch time stamp in seconds for when the cluster was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the cluster.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the EKS cluster. One of `RUNNING`, `TERMINATING`, `TERMINATED`, `ARRESTED`.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Key-value mapping of resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String virtualClusterId() {
        return this.virtualClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private List<GetVirtualClusterContainerProvider> containerProviders;
        private String createdAt;
        private String id;
        private String name;
        private String state;
        private Map<String,String> tags;
        private String virtualClusterId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerProviders = defaults.containerProviders;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.virtualClusterId = defaults.virtualClusterId;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder containerProviders(List<GetVirtualClusterContainerProvider> containerProviders) {
            this.containerProviders = Objects.requireNonNull(containerProviders);
            return this;
        }
        public Builder containerProviders(GetVirtualClusterContainerProvider... containerProviders) {
            return containerProviders(List.of(containerProviders));
        }
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder virtualClusterId(String virtualClusterId) {
            this.virtualClusterId = Objects.requireNonNull(virtualClusterId);
            return this;
        }        public GetVirtualClusterResult build() {
            return new GetVirtualClusterResult(arn, containerProviders, createdAt, id, name, state, tags, virtualClusterId);
        }
    }
}
