// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.inputs;

import com.pulumi.aws.acmpca.inputs.GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs;
import com.pulumi.aws.acmpca.inputs.GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class GetCertificateAuthorityRevocationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCertificateAuthorityRevocationConfigurationArgs Empty = new GetCertificateAuthorityRevocationConfigurationArgs();

    @Import(name="crlConfigurations", required=true)
    private Output<List<GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs>> crlConfigurations;

    public Output<List<GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs>> crlConfigurations() {
        return this.crlConfigurations;
    }

    @Import(name="ocspConfigurations", required=true)
    private Output<List<GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs>> ocspConfigurations;

    public Output<List<GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs>> ocspConfigurations() {
        return this.ocspConfigurations;
    }

    private GetCertificateAuthorityRevocationConfigurationArgs() {}

    private GetCertificateAuthorityRevocationConfigurationArgs(GetCertificateAuthorityRevocationConfigurationArgs $) {
        this.crlConfigurations = $.crlConfigurations;
        this.ocspConfigurations = $.ocspConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificateAuthorityRevocationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificateAuthorityRevocationConfigurationArgs $;

        public Builder() {
            $ = new GetCertificateAuthorityRevocationConfigurationArgs();
        }

        public Builder(GetCertificateAuthorityRevocationConfigurationArgs defaults) {
            $ = new GetCertificateAuthorityRevocationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder crlConfigurations(Output<List<GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs>> crlConfigurations) {
            $.crlConfigurations = crlConfigurations;
            return this;
        }

        public Builder crlConfigurations(List<GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs> crlConfigurations) {
            return crlConfigurations(Output.of(crlConfigurations));
        }

        public Builder crlConfigurations(GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs... crlConfigurations) {
            return crlConfigurations(List.of(crlConfigurations));
        }

        public Builder ocspConfigurations(Output<List<GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs>> ocspConfigurations) {
            $.ocspConfigurations = ocspConfigurations;
            return this;
        }

        public Builder ocspConfigurations(List<GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs> ocspConfigurations) {
            return ocspConfigurations(Output.of(ocspConfigurations));
        }

        public Builder ocspConfigurations(GetCertificateAuthorityRevocationConfigurationOcspConfigurationArgs... ocspConfigurations) {
            return ocspConfigurations(List.of(ocspConfigurations));
        }

        public GetCertificateAuthorityRevocationConfigurationArgs build() {
            $.crlConfigurations = Objects.requireNonNull($.crlConfigurations, "expected parameter 'crlConfigurations' to be non-null");
            $.ocspConfigurations = Objects.requireNonNull($.ocspConfigurations, "expected parameter 'ocspConfigurations' to be non-null");
            return $;
        }
    }

}
