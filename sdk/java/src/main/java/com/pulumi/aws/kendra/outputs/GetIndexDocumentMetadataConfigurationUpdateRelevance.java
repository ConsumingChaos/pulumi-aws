// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetIndexDocumentMetadataConfigurationUpdateRelevance {
    /**
     * @return Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     * 
     */
    private final String duration;
    /**
     * @return Indicates that this field determines how &#34;fresh&#34; a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     * 
     */
    private final Boolean freshness;
    /**
     * @return The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     * 
     */
    private final Integer importance;
    /**
     * @return Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     * 
     */
    private final String rankOrder;
    /**
     * @return A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     * 
     */
    private final Map<String,Integer> valuesImportanceMap;

    @CustomType.Constructor
    private GetIndexDocumentMetadataConfigurationUpdateRelevance(
        @CustomType.Parameter("duration") String duration,
        @CustomType.Parameter("freshness") Boolean freshness,
        @CustomType.Parameter("importance") Integer importance,
        @CustomType.Parameter("rankOrder") String rankOrder,
        @CustomType.Parameter("valuesImportanceMap") Map<String,Integer> valuesImportanceMap) {
        this.duration = duration;
        this.freshness = freshness;
        this.importance = importance;
        this.rankOrder = rankOrder;
        this.valuesImportanceMap = valuesImportanceMap;
    }

    /**
     * @return Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return Indicates that this field determines how &#34;fresh&#34; a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
     * 
     */
    public Boolean freshness() {
        return this.freshness;
    }
    /**
     * @return The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
     * 
     */
    public Integer importance() {
        return this.importance;
    }
    /**
     * @return Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
     * 
     */
    public String rankOrder() {
        return this.rankOrder;
    }
    /**
     * @return A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
     * 
     */
    public Map<String,Integer> valuesImportanceMap() {
        return this.valuesImportanceMap;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexDocumentMetadataConfigurationUpdateRelevance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String duration;
        private Boolean freshness;
        private Integer importance;
        private String rankOrder;
        private Map<String,Integer> valuesImportanceMap;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIndexDocumentMetadataConfigurationUpdateRelevance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.freshness = defaults.freshness;
    	      this.importance = defaults.importance;
    	      this.rankOrder = defaults.rankOrder;
    	      this.valuesImportanceMap = defaults.valuesImportanceMap;
        }

        public Builder duration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }
        public Builder freshness(Boolean freshness) {
            this.freshness = Objects.requireNonNull(freshness);
            return this;
        }
        public Builder importance(Integer importance) {
            this.importance = Objects.requireNonNull(importance);
            return this;
        }
        public Builder rankOrder(String rankOrder) {
            this.rankOrder = Objects.requireNonNull(rankOrder);
            return this;
        }
        public Builder valuesImportanceMap(Map<String,Integer> valuesImportanceMap) {
            this.valuesImportanceMap = Objects.requireNonNull(valuesImportanceMap);
            return this;
        }        public GetIndexDocumentMetadataConfigurationUpdateRelevance build() {
            return new GetIndexDocumentMetadataConfigurationUpdateRelevance(duration, freshness, importance, rankOrder, valuesImportanceMap);
        }
    }
}
