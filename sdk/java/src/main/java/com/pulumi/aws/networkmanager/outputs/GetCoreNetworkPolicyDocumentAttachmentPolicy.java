// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.outputs;

import com.pulumi.aws.networkmanager.outputs.GetCoreNetworkPolicyDocumentAttachmentPolicyAction;
import com.pulumi.aws.networkmanager.outputs.GetCoreNetworkPolicyDocumentAttachmentPolicyCondition;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCoreNetworkPolicyDocumentAttachmentPolicy {
    /**
     * @return The action to take for the chosen segment. Valid values `create-route` or `share`.
     * 
     */
    private final GetCoreNetworkPolicyDocumentAttachmentPolicyAction action;
    /**
     * @return Valid values include `and` or `or`. This is a mandatory parameter only if you have more than one condition. The `condition_logic` apply to all of the conditions for a rule, which also means nested conditions of `and` or `or` are not supported. Use `or` if you want to associate the attachment with the segment by either the segment name or attachment tag value, or by the chosen conditions. Use `and` if you want to associate the attachment with the segment by either the segment name or attachment tag value and by the chosen conditions. Detailed Below.
     * 
     */
    private final @Nullable String conditionLogic;
    /**
     * @return A block argument. Detailed Below.
     * 
     */
    private final List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions;
    /**
     * @return A user-defined string describing the segment action.
     * 
     */
    private final @Nullable String description;
    /**
     * @return An integer from `1` to `65535` indicating the rule&#39;s order number. Rules are processed in order from the lowest numbered rule to the highest. Rules stop processing when a rule is matched. It&#39;s important to make sure that you number your rules in the exact order that you want them processed.
     * 
     */
    private final Integer ruleNumber;

    @CustomType.Constructor
    private GetCoreNetworkPolicyDocumentAttachmentPolicy(
        @CustomType.Parameter("action") GetCoreNetworkPolicyDocumentAttachmentPolicyAction action,
        @CustomType.Parameter("conditionLogic") @Nullable String conditionLogic,
        @CustomType.Parameter("conditions") List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("ruleNumber") Integer ruleNumber) {
        this.action = action;
        this.conditionLogic = conditionLogic;
        this.conditions = conditions;
        this.description = description;
        this.ruleNumber = ruleNumber;
    }

    /**
     * @return The action to take for the chosen segment. Valid values `create-route` or `share`.
     * 
     */
    public GetCoreNetworkPolicyDocumentAttachmentPolicyAction action() {
        return this.action;
    }
    /**
     * @return Valid values include `and` or `or`. This is a mandatory parameter only if you have more than one condition. The `condition_logic` apply to all of the conditions for a rule, which also means nested conditions of `and` or `or` are not supported. Use `or` if you want to associate the attachment with the segment by either the segment name or attachment tag value, or by the chosen conditions. Use `and` if you want to associate the attachment with the segment by either the segment name or attachment tag value and by the chosen conditions. Detailed Below.
     * 
     */
    public Optional<String> conditionLogic() {
        return Optional.ofNullable(this.conditionLogic);
    }
    /**
     * @return A block argument. Detailed Below.
     * 
     */
    public List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return A user-defined string describing the segment action.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return An integer from `1` to `65535` indicating the rule&#39;s order number. Rules are processed in order from the lowest numbered rule to the highest. Rules stop processing when a rule is matched. It&#39;s important to make sure that you number your rules in the exact order that you want them processed.
     * 
     */
    public Integer ruleNumber() {
        return this.ruleNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCoreNetworkPolicyDocumentAttachmentPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCoreNetworkPolicyDocumentAttachmentPolicyAction action;
        private @Nullable String conditionLogic;
        private List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions;
        private @Nullable String description;
        private Integer ruleNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCoreNetworkPolicyDocumentAttachmentPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditionLogic = defaults.conditionLogic;
    	      this.conditions = defaults.conditions;
    	      this.description = defaults.description;
    	      this.ruleNumber = defaults.ruleNumber;
        }

        public Builder action(GetCoreNetworkPolicyDocumentAttachmentPolicyAction action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder conditionLogic(@Nullable String conditionLogic) {
            this.conditionLogic = conditionLogic;
            return this;
        }
        public Builder conditions(List<GetCoreNetworkPolicyDocumentAttachmentPolicyCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GetCoreNetworkPolicyDocumentAttachmentPolicyCondition... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder ruleNumber(Integer ruleNumber) {
            this.ruleNumber = Objects.requireNonNull(ruleNumber);
            return this;
        }        public GetCoreNetworkPolicyDocumentAttachmentPolicy build() {
            return new GetCoreNetworkPolicyDocumentAttachmentPolicy(action, conditionLogic, conditions, description, ruleNumber);
        }
    }
}
