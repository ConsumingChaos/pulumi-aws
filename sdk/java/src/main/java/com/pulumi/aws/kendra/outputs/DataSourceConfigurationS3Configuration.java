// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kendra.outputs;

import com.pulumi.aws.kendra.outputs.DataSourceConfigurationS3ConfigurationAccessControlListConfiguration;
import com.pulumi.aws.kendra.outputs.DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceConfigurationS3Configuration {
    /**
     * @return A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
     * 
     */
    private final @Nullable DataSourceConfigurationS3ConfigurationAccessControlListConfiguration accessControlListConfiguration;
    /**
     * @return The name of the bucket that contains the documents.
     * 
     */
    private final String bucketName;
    /**
     * @return A block that defines the Ddcument metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
     * 
     */
    private final @Nullable DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration documentsMetadataConfiguration;
    /**
     * @return A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
     * 
     */
    private final @Nullable List<String> exclusionPatterns;
    /**
     * @return A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
     * 
     */
    private final @Nullable List<String> inclusionPatterns;
    /**
     * @return A list of S3 prefixes for the documents that should be included in the index.
     * 
     */
    private final @Nullable List<String> inclusionPrefixes;

    @CustomType.Constructor
    private DataSourceConfigurationS3Configuration(
        @CustomType.Parameter("accessControlListConfiguration") @Nullable DataSourceConfigurationS3ConfigurationAccessControlListConfiguration accessControlListConfiguration,
        @CustomType.Parameter("bucketName") String bucketName,
        @CustomType.Parameter("documentsMetadataConfiguration") @Nullable DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration documentsMetadataConfiguration,
        @CustomType.Parameter("exclusionPatterns") @Nullable List<String> exclusionPatterns,
        @CustomType.Parameter("inclusionPatterns") @Nullable List<String> inclusionPatterns,
        @CustomType.Parameter("inclusionPrefixes") @Nullable List<String> inclusionPrefixes) {
        this.accessControlListConfiguration = accessControlListConfiguration;
        this.bucketName = bucketName;
        this.documentsMetadataConfiguration = documentsMetadataConfiguration;
        this.exclusionPatterns = exclusionPatterns;
        this.inclusionPatterns = inclusionPatterns;
        this.inclusionPrefixes = inclusionPrefixes;
    }

    /**
     * @return A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
     * 
     */
    public Optional<DataSourceConfigurationS3ConfigurationAccessControlListConfiguration> accessControlListConfiguration() {
        return Optional.ofNullable(this.accessControlListConfiguration);
    }
    /**
     * @return The name of the bucket that contains the documents.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return A block that defines the Ddcument metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
     * 
     */
    public Optional<DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration> documentsMetadataConfiguration() {
        return Optional.ofNullable(this.documentsMetadataConfiguration);
    }
    /**
     * @return A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
     * 
     */
    public List<String> exclusionPatterns() {
        return this.exclusionPatterns == null ? List.of() : this.exclusionPatterns;
    }
    /**
     * @return A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
     * 
     */
    public List<String> inclusionPatterns() {
        return this.inclusionPatterns == null ? List.of() : this.inclusionPatterns;
    }
    /**
     * @return A list of S3 prefixes for the documents that should be included in the index.
     * 
     */
    public List<String> inclusionPrefixes() {
        return this.inclusionPrefixes == null ? List.of() : this.inclusionPrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceConfigurationS3Configuration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DataSourceConfigurationS3ConfigurationAccessControlListConfiguration accessControlListConfiguration;
        private String bucketName;
        private @Nullable DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration documentsMetadataConfiguration;
        private @Nullable List<String> exclusionPatterns;
        private @Nullable List<String> inclusionPatterns;
        private @Nullable List<String> inclusionPrefixes;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceConfigurationS3Configuration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlListConfiguration = defaults.accessControlListConfiguration;
    	      this.bucketName = defaults.bucketName;
    	      this.documentsMetadataConfiguration = defaults.documentsMetadataConfiguration;
    	      this.exclusionPatterns = defaults.exclusionPatterns;
    	      this.inclusionPatterns = defaults.inclusionPatterns;
    	      this.inclusionPrefixes = defaults.inclusionPrefixes;
        }

        public Builder accessControlListConfiguration(@Nullable DataSourceConfigurationS3ConfigurationAccessControlListConfiguration accessControlListConfiguration) {
            this.accessControlListConfiguration = accessControlListConfiguration;
            return this;
        }
        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder documentsMetadataConfiguration(@Nullable DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration documentsMetadataConfiguration) {
            this.documentsMetadataConfiguration = documentsMetadataConfiguration;
            return this;
        }
        public Builder exclusionPatterns(@Nullable List<String> exclusionPatterns) {
            this.exclusionPatterns = exclusionPatterns;
            return this;
        }
        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }
        public Builder inclusionPatterns(@Nullable List<String> inclusionPatterns) {
            this.inclusionPatterns = inclusionPatterns;
            return this;
        }
        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }
        public Builder inclusionPrefixes(@Nullable List<String> inclusionPrefixes) {
            this.inclusionPrefixes = inclusionPrefixes;
            return this;
        }
        public Builder inclusionPrefixes(String... inclusionPrefixes) {
            return inclusionPrefixes(List.of(inclusionPrefixes));
        }        public DataSourceConfigurationS3Configuration build() {
            return new DataSourceConfigurationS3Configuration(accessControlListConfiguration, bucketName, documentsMetadataConfiguration, exclusionPatterns, inclusionPatterns, inclusionPrefixes);
        }
    }
}
