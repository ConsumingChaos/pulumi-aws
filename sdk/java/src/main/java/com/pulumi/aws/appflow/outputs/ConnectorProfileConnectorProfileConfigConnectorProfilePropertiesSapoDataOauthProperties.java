// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
    /**
     * @return The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
     * 
     */
    private final String authCodeUrl;
    /**
     * @return The OAuth scopes required for OAuth type authentication.
     * 
     */
    private final List<String> oauthScopes;
    /**
     * @return The token url required to fetch access/refresh tokens using authorization code and also to refresh expired access token using refresh token.
     * 
     */
    private final String tokenUrl;

    @CustomType.Constructor
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties(
        @CustomType.Parameter("authCodeUrl") String authCodeUrl,
        @CustomType.Parameter("oauthScopes") List<String> oauthScopes,
        @CustomType.Parameter("tokenUrl") String tokenUrl) {
        this.authCodeUrl = authCodeUrl;
        this.oauthScopes = oauthScopes;
        this.tokenUrl = tokenUrl;
    }

    /**
     * @return The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
     * 
     */
    public String authCodeUrl() {
        return this.authCodeUrl;
    }
    /**
     * @return The OAuth scopes required for OAuth type authentication.
     * 
     */
    public List<String> oauthScopes() {
        return this.oauthScopes;
    }
    /**
     * @return The token url required to fetch access/refresh tokens using authorization code and also to refresh expired access token using refresh token.
     * 
     */
    public String tokenUrl() {
        return this.tokenUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authCodeUrl;
        private List<String> oauthScopes;
        private String tokenUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authCodeUrl = defaults.authCodeUrl;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.tokenUrl = defaults.tokenUrl;
        }

        public Builder authCodeUrl(String authCodeUrl) {
            this.authCodeUrl = Objects.requireNonNull(authCodeUrl);
            return this;
        }
        public Builder oauthScopes(List<String> oauthScopes) {
            this.oauthScopes = Objects.requireNonNull(oauthScopes);
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        public Builder tokenUrl(String tokenUrl) {
            this.tokenUrl = Objects.requireNonNull(tokenUrl);
            return this;
        }        public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties build() {
            return new ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties(authCodeUrl, oauthScopes, tokenUrl);
        }
    }
}
