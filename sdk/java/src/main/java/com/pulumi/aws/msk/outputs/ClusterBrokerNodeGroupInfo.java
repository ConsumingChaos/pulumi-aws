// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.msk.outputs;

import com.pulumi.aws.msk.outputs.ClusterBrokerNodeGroupInfoConnectivityInfo;
import com.pulumi.aws.msk.outputs.ClusterBrokerNodeGroupInfoStorageInfo;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterBrokerNodeGroupInfo {
    /**
     * @return The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
     * 
     */
    private final @Nullable String azDistribution;
    /**
     * @return A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
     * 
     */
    private final List<String> clientSubnets;
    /**
     * @return Information about the cluster access configuration. See below. For security reasons, you can&#39;t turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
     * 
     */
    private final @Nullable ClusterBrokerNodeGroupInfoConnectivityInfo connectivityInfo;
    /**
     * @return The size in GiB of the EBS volume for the data drive on each broker node.
     * 
     * @deprecated
     * use &#39;storage_info&#39; argument instead
     * 
     */
    @Deprecated /* use 'storage_info' argument instead */
    private final @Nullable Integer ebsVolumeSize;
    /**
     * @return Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
     * 
     */
    private final String instanceType;
    /**
     * @return A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
     * 
     */
    private final List<String> securityGroups;
    /**
     * @return A block that contains information about storage volumes attached to MSK broker nodes. See below.
     * 
     */
    private final @Nullable ClusterBrokerNodeGroupInfoStorageInfo storageInfo;

    @CustomType.Constructor
    private ClusterBrokerNodeGroupInfo(
        @CustomType.Parameter("azDistribution") @Nullable String azDistribution,
        @CustomType.Parameter("clientSubnets") List<String> clientSubnets,
        @CustomType.Parameter("connectivityInfo") @Nullable ClusterBrokerNodeGroupInfoConnectivityInfo connectivityInfo,
        @CustomType.Parameter("ebsVolumeSize") @Nullable Integer ebsVolumeSize,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("securityGroups") List<String> securityGroups,
        @CustomType.Parameter("storageInfo") @Nullable ClusterBrokerNodeGroupInfoStorageInfo storageInfo) {
        this.azDistribution = azDistribution;
        this.clientSubnets = clientSubnets;
        this.connectivityInfo = connectivityInfo;
        this.ebsVolumeSize = ebsVolumeSize;
        this.instanceType = instanceType;
        this.securityGroups = securityGroups;
        this.storageInfo = storageInfo;
    }

    /**
     * @return The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
     * 
     */
    public Optional<String> azDistribution() {
        return Optional.ofNullable(this.azDistribution);
    }
    /**
     * @return A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
     * 
     */
    public List<String> clientSubnets() {
        return this.clientSubnets;
    }
    /**
     * @return Information about the cluster access configuration. See below. For security reasons, you can&#39;t turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
     * 
     */
    public Optional<ClusterBrokerNodeGroupInfoConnectivityInfo> connectivityInfo() {
        return Optional.ofNullable(this.connectivityInfo);
    }
    /**
     * @return The size in GiB of the EBS volume for the data drive on each broker node.
     * 
     * @deprecated
     * use &#39;storage_info&#39; argument instead
     * 
     */
    @Deprecated /* use 'storage_info' argument instead */
    public Optional<Integer> ebsVolumeSize() {
        return Optional.ofNullable(this.ebsVolumeSize);
    }
    /**
     * @return Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups;
    }
    /**
     * @return A block that contains information about storage volumes attached to MSK broker nodes. See below.
     * 
     */
    public Optional<ClusterBrokerNodeGroupInfoStorageInfo> storageInfo() {
        return Optional.ofNullable(this.storageInfo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterBrokerNodeGroupInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String azDistribution;
        private List<String> clientSubnets;
        private @Nullable ClusterBrokerNodeGroupInfoConnectivityInfo connectivityInfo;
        private @Nullable Integer ebsVolumeSize;
        private String instanceType;
        private List<String> securityGroups;
        private @Nullable ClusterBrokerNodeGroupInfoStorageInfo storageInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterBrokerNodeGroupInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azDistribution = defaults.azDistribution;
    	      this.clientSubnets = defaults.clientSubnets;
    	      this.connectivityInfo = defaults.connectivityInfo;
    	      this.ebsVolumeSize = defaults.ebsVolumeSize;
    	      this.instanceType = defaults.instanceType;
    	      this.securityGroups = defaults.securityGroups;
    	      this.storageInfo = defaults.storageInfo;
        }

        public Builder azDistribution(@Nullable String azDistribution) {
            this.azDistribution = azDistribution;
            return this;
        }
        public Builder clientSubnets(List<String> clientSubnets) {
            this.clientSubnets = Objects.requireNonNull(clientSubnets);
            return this;
        }
        public Builder clientSubnets(String... clientSubnets) {
            return clientSubnets(List.of(clientSubnets));
        }
        public Builder connectivityInfo(@Nullable ClusterBrokerNodeGroupInfoConnectivityInfo connectivityInfo) {
            this.connectivityInfo = connectivityInfo;
            return this;
        }
        public Builder ebsVolumeSize(@Nullable Integer ebsVolumeSize) {
            this.ebsVolumeSize = ebsVolumeSize;
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder storageInfo(@Nullable ClusterBrokerNodeGroupInfoStorageInfo storageInfo) {
            this.storageInfo = storageInfo;
            return this;
        }        public ClusterBrokerNodeGroupInfo build() {
            return new ClusterBrokerNodeGroupInfo(azDistribution, clientSubnets, connectivityInfo, ebsVolumeSize, instanceType, securityGroups, storageInfo);
        }
    }
}
