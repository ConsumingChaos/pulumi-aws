// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emrserverless.outputs;

import com.pulumi.aws.emrserverless.outputs.ApplicationInitialCapacityInitialCapacityConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationInitialCapacity {
    /**
     * @return The initial capacity configuration per worker.
     * 
     */
    private final @Nullable ApplicationInitialCapacityInitialCapacityConfig initialCapacityConfig;
    /**
     * @return The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
     * 
     */
    private final String initialCapacityType;

    @CustomType.Constructor
    private ApplicationInitialCapacity(
        @CustomType.Parameter("initialCapacityConfig") @Nullable ApplicationInitialCapacityInitialCapacityConfig initialCapacityConfig,
        @CustomType.Parameter("initialCapacityType") String initialCapacityType) {
        this.initialCapacityConfig = initialCapacityConfig;
        this.initialCapacityType = initialCapacityType;
    }

    /**
     * @return The initial capacity configuration per worker.
     * 
     */
    public Optional<ApplicationInitialCapacityInitialCapacityConfig> initialCapacityConfig() {
        return Optional.ofNullable(this.initialCapacityConfig);
    }
    /**
     * @return The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
     * 
     */
    public String initialCapacityType() {
        return this.initialCapacityType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationInitialCapacity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ApplicationInitialCapacityInitialCapacityConfig initialCapacityConfig;
        private String initialCapacityType;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationInitialCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.initialCapacityConfig = defaults.initialCapacityConfig;
    	      this.initialCapacityType = defaults.initialCapacityType;
        }

        public Builder initialCapacityConfig(@Nullable ApplicationInitialCapacityInitialCapacityConfig initialCapacityConfig) {
            this.initialCapacityConfig = initialCapacityConfig;
            return this;
        }
        public Builder initialCapacityType(String initialCapacityType) {
            this.initialCapacityType = Objects.requireNonNull(initialCapacityType);
            return this;
        }        public ApplicationInitialCapacity build() {
            return new ApplicationInitialCapacity(initialCapacityConfig, initialCapacityType);
        }
    }
}
