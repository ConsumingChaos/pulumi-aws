// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver;
import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfigDestinationConnectorProperties {
    /**
     * @return Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector;
    /**
     * @return The properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles;
    /**
     * @return The properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge;
    /**
     * @return The properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode;
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics;
    /**
     * @return The operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo;
    /**
     * @return The properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift;
    /**
     * @return The operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3;
    /**
     * @return The operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce;
    /**
     * @return The operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData;
    /**
     * @return The properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake;
    /**
     * @return The properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver;
    /**
     * @return The operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk;

    @CustomType.Constructor
    private FlowDestinationFlowConfigDestinationConnectorProperties(
        @CustomType.Parameter("customConnector") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector,
        @CustomType.Parameter("customerProfiles") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles,
        @CustomType.Parameter("eventBridge") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge,
        @CustomType.Parameter("honeycode") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode,
        @CustomType.Parameter("lookoutMetrics") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics,
        @CustomType.Parameter("marketo") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo,
        @CustomType.Parameter("redshift") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift,
        @CustomType.Parameter("s3") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3,
        @CustomType.Parameter("salesforce") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce,
        @CustomType.Parameter("sapoData") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData,
        @CustomType.Parameter("snowflake") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake,
        @CustomType.Parameter("upsolver") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver,
        @CustomType.Parameter("zendesk") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk) {
        this.customConnector = customConnector;
        this.customerProfiles = customerProfiles;
        this.eventBridge = eventBridge;
        this.honeycode = honeycode;
        this.lookoutMetrics = lookoutMetrics;
        this.marketo = marketo;
        this.redshift = redshift;
        this.s3 = s3;
        this.salesforce = salesforce;
        this.sapoData = sapoData;
        this.snowflake = snowflake;
        this.upsolver = upsolver;
        this.zendesk = zendesk;
    }

    /**
     * @return Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector> customConnector() {
        return Optional.ofNullable(this.customConnector);
    }
    /**
     * @return The properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles> customerProfiles() {
        return Optional.ofNullable(this.customerProfiles);
    }
    /**
     * @return The properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge> eventBridge() {
        return Optional.ofNullable(this.eventBridge);
    }
    /**
     * @return The properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode> honeycode() {
        return Optional.ofNullable(this.honeycode);
    }
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics> lookoutMetrics() {
        return Optional.ofNullable(this.lookoutMetrics);
    }
    /**
     * @return The operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo> marketo() {
        return Optional.ofNullable(this.marketo);
    }
    /**
     * @return The properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift> redshift() {
        return Optional.ofNullable(this.redshift);
    }
    /**
     * @return The operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesS3> s3() {
        return Optional.ofNullable(this.s3);
    }
    /**
     * @return The operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce> salesforce() {
        return Optional.ofNullable(this.salesforce);
    }
    /**
     * @return The operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData> sapoData() {
        return Optional.ofNullable(this.sapoData);
    }
    /**
     * @return The properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }
    /**
     * @return The properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver> upsolver() {
        return Optional.ofNullable(this.upsolver);
    }
    /**
     * @return The operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk> zendesk() {
        return Optional.ofNullable(this.zendesk);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDestinationFlowConfigDestinationConnectorProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customConnector = defaults.customConnector;
    	      this.customerProfiles = defaults.customerProfiles;
    	      this.eventBridge = defaults.eventBridge;
    	      this.honeycode = defaults.honeycode;
    	      this.lookoutMetrics = defaults.lookoutMetrics;
    	      this.marketo = defaults.marketo;
    	      this.redshift = defaults.redshift;
    	      this.s3 = defaults.s3;
    	      this.salesforce = defaults.salesforce;
    	      this.sapoData = defaults.sapoData;
    	      this.snowflake = defaults.snowflake;
    	      this.upsolver = defaults.upsolver;
    	      this.zendesk = defaults.zendesk;
        }

        public Builder customConnector(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector) {
            this.customConnector = customConnector;
            return this;
        }
        public Builder customerProfiles(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles) {
            this.customerProfiles = customerProfiles;
            return this;
        }
        public Builder eventBridge(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge) {
            this.eventBridge = eventBridge;
            return this;
        }
        public Builder honeycode(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode) {
            this.honeycode = honeycode;
            return this;
        }
        public Builder lookoutMetrics(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics) {
            this.lookoutMetrics = lookoutMetrics;
            return this;
        }
        public Builder marketo(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo) {
            this.marketo = marketo;
            return this;
        }
        public Builder redshift(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift) {
            this.redshift = redshift;
            return this;
        }
        public Builder s3(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3) {
            this.s3 = s3;
            return this;
        }
        public Builder salesforce(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce) {
            this.salesforce = salesforce;
            return this;
        }
        public Builder sapoData(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData) {
            this.sapoData = sapoData;
            return this;
        }
        public Builder snowflake(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake) {
            this.snowflake = snowflake;
            return this;
        }
        public Builder upsolver(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver) {
            this.upsolver = upsolver;
            return this;
        }
        public Builder zendesk(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk) {
            this.zendesk = zendesk;
            return this;
        }        public FlowDestinationFlowConfigDestinationConnectorProperties build() {
            return new FlowDestinationFlowConfigDestinationConnectorProperties(customConnector, customerProfiles, eventBridge, honeycode, lookoutMetrics, marketo, redshift, s3, salesforce, sapoData, snowflake, upsolver, zendesk);
        }
    }
}
