// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appflow.outputs;

import com.pulumi.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector {
    /**
     * @return The custom properties that are specific to the connector when it&#39;s used as a source in the flow. Maximum of 50 items.
     * 
     */
    private final @Nullable Map<String,String> customProperties;
    /**
     * @return The entity specified in the custom connector as a source in the flow.
     * 
     */
    private final String entityName;
    /**
     * @return The settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.
     * 
     */
    private final @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig errorHandlingConfig;
    /**
     * @return The name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update or delete.
     * 
     */
    private final @Nullable List<String> idFieldNames;
    /**
     * @return This specifies the type of write operation to be performed in Zendesk. When the value is `UPSERT`, then `id_field_names` is required. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
     * 
     */
    private final @Nullable String writeOperationType;

    @CustomType.Constructor
    private FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector(
        @CustomType.Parameter("customProperties") @Nullable Map<String,String> customProperties,
        @CustomType.Parameter("entityName") String entityName,
        @CustomType.Parameter("errorHandlingConfig") @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig errorHandlingConfig,
        @CustomType.Parameter("idFieldNames") @Nullable List<String> idFieldNames,
        @CustomType.Parameter("writeOperationType") @Nullable String writeOperationType) {
        this.customProperties = customProperties;
        this.entityName = entityName;
        this.errorHandlingConfig = errorHandlingConfig;
        this.idFieldNames = idFieldNames;
        this.writeOperationType = writeOperationType;
    }

    /**
     * @return The custom properties that are specific to the connector when it&#39;s used as a source in the flow. Maximum of 50 items.
     * 
     */
    public Map<String,String> customProperties() {
        return this.customProperties == null ? Map.of() : this.customProperties;
    }
    /**
     * @return The entity specified in the custom connector as a source in the flow.
     * 
     */
    public String entityName() {
        return this.entityName;
    }
    /**
     * @return The settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.
     * 
     */
    public Optional<FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }
    /**
     * @return The name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update or delete.
     * 
     */
    public List<String> idFieldNames() {
        return this.idFieldNames == null ? List.of() : this.idFieldNames;
    }
    /**
     * @return This specifies the type of write operation to be performed in Zendesk. When the value is `UPSERT`, then `id_field_names` is required. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
     * 
     */
    public Optional<String> writeOperationType() {
        return Optional.ofNullable(this.writeOperationType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,String> customProperties;
        private String entityName;
        private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig errorHandlingConfig;
        private @Nullable List<String> idFieldNames;
        private @Nullable String writeOperationType;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customProperties = defaults.customProperties;
    	      this.entityName = defaults.entityName;
    	      this.errorHandlingConfig = defaults.errorHandlingConfig;
    	      this.idFieldNames = defaults.idFieldNames;
    	      this.writeOperationType = defaults.writeOperationType;
        }

        public Builder customProperties(@Nullable Map<String,String> customProperties) {
            this.customProperties = customProperties;
            return this;
        }
        public Builder entityName(String entityName) {
            this.entityName = Objects.requireNonNull(entityName);
            return this;
        }
        public Builder errorHandlingConfig(@Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig errorHandlingConfig) {
            this.errorHandlingConfig = errorHandlingConfig;
            return this;
        }
        public Builder idFieldNames(@Nullable List<String> idFieldNames) {
            this.idFieldNames = idFieldNames;
            return this;
        }
        public Builder idFieldNames(String... idFieldNames) {
            return idFieldNames(List.of(idFieldNames));
        }
        public Builder writeOperationType(@Nullable String writeOperationType) {
            this.writeOperationType = writeOperationType;
            return this;
        }        public FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector build() {
            return new FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector(customProperties, entityName, errorHandlingConfig, idFieldNames, writeOperationType);
        }
    }
}
