// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.secretsmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRandomPasswordResult {
    private final @Nullable String excludeCharacters;
    private final @Nullable Boolean excludeLowercase;
    private final @Nullable Boolean excludeNumbers;
    private final @Nullable Boolean excludePunctuation;
    private final @Nullable Boolean excludeUppercase;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable Boolean includeSpace;
    private final @Nullable Integer passwordLength;
    /**
     * @return The random password.
     * 
     */
    private final String randomPassword;
    private final @Nullable Boolean requireEachIncludedType;

    @CustomType.Constructor
    private GetRandomPasswordResult(
        @CustomType.Parameter("excludeCharacters") @Nullable String excludeCharacters,
        @CustomType.Parameter("excludeLowercase") @Nullable Boolean excludeLowercase,
        @CustomType.Parameter("excludeNumbers") @Nullable Boolean excludeNumbers,
        @CustomType.Parameter("excludePunctuation") @Nullable Boolean excludePunctuation,
        @CustomType.Parameter("excludeUppercase") @Nullable Boolean excludeUppercase,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("includeSpace") @Nullable Boolean includeSpace,
        @CustomType.Parameter("passwordLength") @Nullable Integer passwordLength,
        @CustomType.Parameter("randomPassword") String randomPassword,
        @CustomType.Parameter("requireEachIncludedType") @Nullable Boolean requireEachIncludedType) {
        this.excludeCharacters = excludeCharacters;
        this.excludeLowercase = excludeLowercase;
        this.excludeNumbers = excludeNumbers;
        this.excludePunctuation = excludePunctuation;
        this.excludeUppercase = excludeUppercase;
        this.id = id;
        this.includeSpace = includeSpace;
        this.passwordLength = passwordLength;
        this.randomPassword = randomPassword;
        this.requireEachIncludedType = requireEachIncludedType;
    }

    public Optional<String> excludeCharacters() {
        return Optional.ofNullable(this.excludeCharacters);
    }
    public Optional<Boolean> excludeLowercase() {
        return Optional.ofNullable(this.excludeLowercase);
    }
    public Optional<Boolean> excludeNumbers() {
        return Optional.ofNullable(this.excludeNumbers);
    }
    public Optional<Boolean> excludePunctuation() {
        return Optional.ofNullable(this.excludePunctuation);
    }
    public Optional<Boolean> excludeUppercase() {
        return Optional.ofNullable(this.excludeUppercase);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeSpace() {
        return Optional.ofNullable(this.includeSpace);
    }
    public Optional<Integer> passwordLength() {
        return Optional.ofNullable(this.passwordLength);
    }
    /**
     * @return The random password.
     * 
     */
    public String randomPassword() {
        return this.randomPassword;
    }
    public Optional<Boolean> requireEachIncludedType() {
        return Optional.ofNullable(this.requireEachIncludedType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRandomPasswordResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String excludeCharacters;
        private @Nullable Boolean excludeLowercase;
        private @Nullable Boolean excludeNumbers;
        private @Nullable Boolean excludePunctuation;
        private @Nullable Boolean excludeUppercase;
        private String id;
        private @Nullable Boolean includeSpace;
        private @Nullable Integer passwordLength;
        private String randomPassword;
        private @Nullable Boolean requireEachIncludedType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRandomPasswordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeCharacters = defaults.excludeCharacters;
    	      this.excludeLowercase = defaults.excludeLowercase;
    	      this.excludeNumbers = defaults.excludeNumbers;
    	      this.excludePunctuation = defaults.excludePunctuation;
    	      this.excludeUppercase = defaults.excludeUppercase;
    	      this.id = defaults.id;
    	      this.includeSpace = defaults.includeSpace;
    	      this.passwordLength = defaults.passwordLength;
    	      this.randomPassword = defaults.randomPassword;
    	      this.requireEachIncludedType = defaults.requireEachIncludedType;
        }

        public Builder excludeCharacters(@Nullable String excludeCharacters) {
            this.excludeCharacters = excludeCharacters;
            return this;
        }
        public Builder excludeLowercase(@Nullable Boolean excludeLowercase) {
            this.excludeLowercase = excludeLowercase;
            return this;
        }
        public Builder excludeNumbers(@Nullable Boolean excludeNumbers) {
            this.excludeNumbers = excludeNumbers;
            return this;
        }
        public Builder excludePunctuation(@Nullable Boolean excludePunctuation) {
            this.excludePunctuation = excludePunctuation;
            return this;
        }
        public Builder excludeUppercase(@Nullable Boolean excludeUppercase) {
            this.excludeUppercase = excludeUppercase;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder includeSpace(@Nullable Boolean includeSpace) {
            this.includeSpace = includeSpace;
            return this;
        }
        public Builder passwordLength(@Nullable Integer passwordLength) {
            this.passwordLength = passwordLength;
            return this;
        }
        public Builder randomPassword(String randomPassword) {
            this.randomPassword = Objects.requireNonNull(randomPassword);
            return this;
        }
        public Builder requireEachIncludedType(@Nullable Boolean requireEachIncludedType) {
            this.requireEachIncludedType = requireEachIncludedType;
            return this;
        }        public GetRandomPasswordResult build() {
            return new GetRandomPasswordResult(excludeCharacters, excludeLowercase, excludeNumbers, excludePunctuation, excludeUppercase, id, includeSpace, passwordLength, randomPassword, requireEachIncludedType);
        }
    }
}
