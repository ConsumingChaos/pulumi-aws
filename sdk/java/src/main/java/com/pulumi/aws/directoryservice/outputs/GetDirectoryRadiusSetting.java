// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directoryservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDirectoryRadiusSetting {
    /**
     * @return The protocol specified for your RADIUS endpoints.
     * 
     */
    private final String authenticationProtocol;
    /**
     * @return Display label.
     * 
     */
    private final String displayLabel;
    /**
     * @return The port that your RADIUS server is using for communications.
     * 
     */
    private final Integer radiusPort;
    /**
     * @return The maximum number of times that communication with the RADIUS server is attempted.
     * 
     */
    private final Integer radiusRetries;
    /**
     * @return A set of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.
     * 
     */
    private final List<String> radiusServers;
    /**
     * @return The amount of time, in seconds, to wait for the RADIUS server to respond.
     * 
     */
    private final Integer radiusTimeout;
    /**
     * @return Not currently used.
     * 
     */
    private final Boolean useSameUsername;

    @CustomType.Constructor
    private GetDirectoryRadiusSetting(
        @CustomType.Parameter("authenticationProtocol") String authenticationProtocol,
        @CustomType.Parameter("displayLabel") String displayLabel,
        @CustomType.Parameter("radiusPort") Integer radiusPort,
        @CustomType.Parameter("radiusRetries") Integer radiusRetries,
        @CustomType.Parameter("radiusServers") List<String> radiusServers,
        @CustomType.Parameter("radiusTimeout") Integer radiusTimeout,
        @CustomType.Parameter("useSameUsername") Boolean useSameUsername) {
        this.authenticationProtocol = authenticationProtocol;
        this.displayLabel = displayLabel;
        this.radiusPort = radiusPort;
        this.radiusRetries = radiusRetries;
        this.radiusServers = radiusServers;
        this.radiusTimeout = radiusTimeout;
        this.useSameUsername = useSameUsername;
    }

    /**
     * @return The protocol specified for your RADIUS endpoints.
     * 
     */
    public String authenticationProtocol() {
        return this.authenticationProtocol;
    }
    /**
     * @return Display label.
     * 
     */
    public String displayLabel() {
        return this.displayLabel;
    }
    /**
     * @return The port that your RADIUS server is using for communications.
     * 
     */
    public Integer radiusPort() {
        return this.radiusPort;
    }
    /**
     * @return The maximum number of times that communication with the RADIUS server is attempted.
     * 
     */
    public Integer radiusRetries() {
        return this.radiusRetries;
    }
    /**
     * @return A set of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.
     * 
     */
    public List<String> radiusServers() {
        return this.radiusServers;
    }
    /**
     * @return The amount of time, in seconds, to wait for the RADIUS server to respond.
     * 
     */
    public Integer radiusTimeout() {
        return this.radiusTimeout;
    }
    /**
     * @return Not currently used.
     * 
     */
    public Boolean useSameUsername() {
        return this.useSameUsername;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryRadiusSetting defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authenticationProtocol;
        private String displayLabel;
        private Integer radiusPort;
        private Integer radiusRetries;
        private List<String> radiusServers;
        private Integer radiusTimeout;
        private Boolean useSameUsername;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDirectoryRadiusSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationProtocol = defaults.authenticationProtocol;
    	      this.displayLabel = defaults.displayLabel;
    	      this.radiusPort = defaults.radiusPort;
    	      this.radiusRetries = defaults.radiusRetries;
    	      this.radiusServers = defaults.radiusServers;
    	      this.radiusTimeout = defaults.radiusTimeout;
    	      this.useSameUsername = defaults.useSameUsername;
        }

        public Builder authenticationProtocol(String authenticationProtocol) {
            this.authenticationProtocol = Objects.requireNonNull(authenticationProtocol);
            return this;
        }
        public Builder displayLabel(String displayLabel) {
            this.displayLabel = Objects.requireNonNull(displayLabel);
            return this;
        }
        public Builder radiusPort(Integer radiusPort) {
            this.radiusPort = Objects.requireNonNull(radiusPort);
            return this;
        }
        public Builder radiusRetries(Integer radiusRetries) {
            this.radiusRetries = Objects.requireNonNull(radiusRetries);
            return this;
        }
        public Builder radiusServers(List<String> radiusServers) {
            this.radiusServers = Objects.requireNonNull(radiusServers);
            return this;
        }
        public Builder radiusServers(String... radiusServers) {
            return radiusServers(List.of(radiusServers));
        }
        public Builder radiusTimeout(Integer radiusTimeout) {
            this.radiusTimeout = Objects.requireNonNull(radiusTimeout);
            return this;
        }
        public Builder useSameUsername(Boolean useSameUsername) {
            this.useSameUsername = Objects.requireNonNull(useSameUsername);
            return this;
        }        public GetDirectoryRadiusSetting build() {
            return new GetDirectoryRadiusSetting(authenticationProtocol, displayLabel, radiusPort, radiusRetries, radiusServers, radiusTimeout, useSameUsername);
        }
    }
}
